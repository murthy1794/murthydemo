{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Dimension",
						"type": "DatasetReference"
					},
					"name": "Dimension"
				},
				{
					"dataset": {
						"referenceName": "Fact",
						"type": "DatasetReference"
					},
					"name": "Fact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Innerjoinoutput",
						"type": "DatasetReference"
					},
					"name": "sink",
					"rejectedDataLinkedService": {
						"referenceName": "Blobstorage_linkedservice",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "innerjoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Order ID} as string,",
				"          {Customer Name} as string,",
				"          Segment as string,",
				"          City as string,",
				"          State as string,",
				"          Region as string,",
				"          Category as string,",
				"          {Sub-Category} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> Dimension",
				"source(output(",
				"          {Order ID} as string,",
				"          {Customer ID} as string,",
				"          Sales as string,",
				"          Quantity as string,",
				"          Discount as string,",
				"          Profit as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Fact",
				"Dimension, Fact join(Dimension@{Order ID} == Fact@{Order ID},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin",
				"innerjoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['customerinfo.csv2'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Category,",
				"          {Sub-Category},",
				"          {Customer ID},",
				"          {Customer Name},",
				"          Segment,",
				"          City,",
				"          State,",
				"          Sales,",
				"          Quantity,",
				"          Discount,",
				"          Profit",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink"
			]
		}
	}
}